name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v3
        #   with:
        #     node-version: 20

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}          
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-node@v3
          with:
            node-version: 18
        - run: npm install
        - continue-on-error: true
          run: npm run coverage
        - uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      name: Containerization
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      permissions:
        packages: write
      steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

    dev-deploy:
      if: contains(github.ref, 'feature/')
      needs: docker
      name: Dev Deployment
      uses: ./.github/workflows/reusable-deployment.yml
      secrets: 
        k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
        mongodb-password: ${{ secrets.MONGO_PASSWORD }}
      with:
        environment: development
        k8s-manifest-dir: kubernetes/development

    dev-integration-testing:
      if: contains(github.ref, 'feature/')
      name: Dev Integration Testing
      needs: dev-deploy
      uses: ./.github/workflows/reusable-testing.yml
      with:
        ingress-url: ${{ needs.dev-deploy.outputs.application-url }}
          
    prod-deploy:
      if: github.ref == 'refs/heads/main'
      needs: docker
      name: Prod Deployment
      uses: ./.github/workflows/reusable-deployment.yml
      secrets: 
        k8s-kubeconfig: ${{ secrets.KUBECONFIG }}
        mongodb-password: ${{ secrets.MONGO_PASSWORD }}
      with:
        environment: production
        k8s-manifest-dir: kubernetes/production

    prod-integration-testing:
      if: github.ref == 'refs/heads/main'
      name: Prod Integration Testing
      needs: prod-deploy
      uses: ./.github/workflows/reusable-testing.yml
      with:
        ingress-url: ${{ needs.prod-deploy.outputs.application-url }}

